{"version":3,"file":"component---src-pages-introduce-tsx-25b172dfa80f70cdb9ba.js","mappings":"sKAGMA,EAAO,CACXC,UAAW,CACTC,MAAO,CAAC,SAAU,YAClBC,KAAM,+BACNC,OAAQ,uBAAKC,IAAI,mBACjBC,QAAS,CACP,2IACA,kDAKAC,EAAe,CACnBL,MAAO,OACPM,SAAU,0FACVC,KAAM,CACJ,CACEC,KAAM,KACNC,OAAQ,CACN,sFACA,qBACA,wCACA,oDACA,sGACA,gDAGJ,CACED,KAAM,MACNC,OAAQ,CACN,8BACA,gBACA,sBACA,qCACA,mHACA,2JACA,mKACA,+FACA,iIACA,uCACA,sBACA,sBACA,qCAGJ,CACED,KAAM,OACNC,OAAQ,CAAC,oCAEX,CACED,KAAM,OACNC,OAAQ,CAAC,mDAEX,CACED,KAAM,KACNC,OAAQ,CACN,iJACA,iDAKFC,EAAkBC,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,yFAQ5BC,EAAcD,EAAAA,QAAAA,IAAAA,WAAU,iEAAVA,CAAU,gLAqC9B,IACME,EAAS,mGAGZ,OAHY,0CACbC,MAAQ,CACNC,SAAU,IACX,GAHY,YAGZ,kBAuDA,OAvDA,EACDC,kBAAAA,WAQE,EACD,EACDC,OAAAA,WACE,OACI,gBAACP,EAAe,KAChB,gBAACE,EAAW,KACTd,EAAKC,UAAUC,MAAMkB,KAAI,SAAClB,EAAOmB,GAAK,OACrC,sBAAIC,IAAKD,GAAQnB,EAAW,IAE9B,qBAAGqB,UAAU,QAAQvB,EAAKC,UAAUE,MACnCH,EAAKC,UAAUG,OACfJ,EAAKC,UAAUK,QAAQc,KAAI,SAACI,EAAKH,GAAK,OACrC,qBAAGC,IAAKD,EAAOE,UAAU,OACtBC,EACC,KAGR,uBAAKD,UAAU,uBACb,sBAAIA,UAAU,eAAehB,EAAaL,OAC1C,yBAAIK,EAAaC,UAChBD,EAAaE,KAAKW,KAAI,SAACK,EAAMJ,GAAK,OACjC,uBAAKC,IAAKD,EAAOE,UAAU,WACzB,0BAAKE,EAAKf,MACTe,EAAKd,OAAOS,KAAI,SAACM,EAAGC,GAAG,OACtB,qBAAGL,IAAKK,GAAMD,EAAM,IAElB,KAGV,uBAAKH,UAAU,qBACb,sBAAIA,UAAU,eAAc,SAgBpC,EAAC,EA1DY,CAASK,EAAAA,WA6DxB,W","sources":["webpack://gradict-charts-doc/./src/pages/introduce.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst data = {\r\n  introduce: {\r\n    title: ['图之典 ——', '可视化图表的词典'],\r\n    tips: '简单易用的图表词典，为你的学习和工作提供科学的可视化建议',\r\n    banner: <img src=\"/introduce.png\" />,\r\n    context: [\r\n      '图之典(Gradict）是由图之可视化工作室（Plothis Studio）制作和维护的数据可视化知识分享站点。本站致力于为数据可视化、数据分析、数据新闻、商业智能等相关领域的朋友提供一个学习可视化专业知识的平台。平台的内容主要涵盖了可视化图表的分类和一些专业概念的介绍。',\r\n      '本站的知识信息是公开、开源的。任何对于本站内容有建议的朋友都可以联系我们，贡献你的知识。'\r\n    ]\r\n  }\r\n};\r\n\r\nconst instructions = {\r\n  title: '使用说明',\r\n  abstract: '欢迎使用图之典！在这里，您可以寻找图表的定义、用法、案例，获取制作教程、学习资源，还可以加入学习社群，甚至亲身参与网站的完善。为帮助您更好的使用网站功能，我们编写了如下指引：',\r\n  part: [\r\n    {\r\n      name: '首页',\r\n      detail: [\r\n        '首页是图表的集中展示区。您可以自由浏览，选择感兴趣的图表深入了解。也可通过页面上方的筛选器，进行有目的的搜索。目前，一期的图表已经上线，二期的更多图表正在积极筹备中。',\r\n        '筛选器支持4种筛选方式（支持多选）：',\r\n        '1.常用图表。即人们通俗认知下的图表分类，如折线图类、柱状图类、饼图类等。',\r\n        '2.形状。包括圆形、矩形、柱形、三角形等。若您在设计上有特定的偏好或需求，可使用这一功能进行筛选。',\r\n        '3.图类。分为统计图表、示意图、地图和表格。统计图表重在诠释数据的统计结果（如占比、加总、分组等），我们常见的柱状图、饼图、折线图等都属于此类；示意图则常用于表示流程和关系，例如桑基图、力导向图等。',\r\n        '4.功能。分为比较、组成、分布、关系、趋势5大类。您可根据自己的需求，选取对应的功能。'\r\n      ]\r\n    },\r\n    {\r\n      name: '详情页',\r\n      detail: [\r\n        '每个图表都有一个详情页面，对其进行深入讲解，结构包括：',\r\n        '1.图表名称、代表性图片。',\r\n        '2.简介。包含图表的定义及用法的综述。',\r\n        '3.图表属性。包括该图表是否属于常用图表，以及它的形状、图类、功能。',\r\n        '4.图表详解。包括3部分：（1）元素构成。使用具体案例，讲解图表的涵义，以及如何由原始数据一步步推导，最终画出图表。（2）适用场景。即该图表最适合使用的情境。（3）不适用场景。即使用中可能出现的误区，以及一些真实的反面案例。',\r\n        '5.相似图表。考虑到潜在的不同需求，我们将相似图表细分为了：（1）仅外形相似（但功能不相似）（2）仅功能相似（但外形不相似）（3）外形功能都相似。这一功能的目的，一方面是帮助您寻找某一图表的“替代者”，为可视化提供更多选择；另一方面，则有助于避免图表的误用，比如将两个仅外形相似的图表当作功能相同来使用。',\r\n        '6.设计案例。这一部分汇集了我们精心挑选的设计案例，整体侧重于设计和美观性和创意性。在选取案例时，我们尽量兼顾了案例的多样性，并配以了简短的文字介绍，以便您快速了解该案例的出彩之处，如排版、用色上的巧思，如何做变形处理，以及采用视频、交互、布展等多种媒介形式等等。您可点击图片，查看大图。也可以点击按钮，访问原作品网页。',\r\n        '7.使用场景。从真实的场景、需求出发，讲解该图表实际的应用情境，囊括了企业、金融、体育、环境、新闻等诸多领域，期望对您有所启发。您也可以点击文字后的链接，访问原作品网页，或者阅读更多。',\r\n        '8.制作教程。我们将工具分为了BI工具、代码库、设计软件3大类，并选取了每一类型中使用较为广泛的工具，搜寻相关教程。我们尽量寻找了那些深入浅出、相对权威、发布较新的文章和视频，但难免单薄或有所遗漏。如果您有更好的教程推荐，我们将非常欢迎您参与到贡献中！',\r\n        '9.专项工具。指能够专门制作该图表的工具，或者方便易用、值得推荐的工具。',\r\n        '10.学习资源。即值得延伸阅读的文章。',\r\n        '11.参考文献。该页出现过的所有引用。',\r\n        '12.贡献者。对该页有所贡献的人员，鼠标移动上去可查看贡献内容。'\r\n      ]\r\n    },\r\n    {\r\n      name: '本站介绍',\r\n      detail: ['包含对图之典网站的简单介绍。此外，您还可以在这里查看版本日志。']\r\n    },\r\n    {\r\n      name: '关于我们',\r\n      detail: ['包含团队介绍及联系方式。您还可以在这里认识所有的项目组成员，并访问他们的社交平台或个人主页。']\r\n    },\r\n    {\r\n      name: '反馈',\r\n      detail: [\r\n        '在网站的所有页面，您都可以看到反馈按钮。您可以在这里向我们提出意见（例如页面中的错误，您发现的好案例、好文章）、建议（例如希望我们优先更新哪些图表），或者表达合作意向。我们会及时处理您的反馈，并以邮件的方式回复您。一旦贡献被采纳，您的昵称及贡献内容，将出现在相应页面的“贡献者”区域。',\r\n        '此外，您还可以通过语雀及微信公众号（链接位于页脚处）联系到我们、参与讨论或提出问题。'\r\n      ]\r\n    }\r\n  ]\r\n};\r\nconst IntroduceLayout = styled.div`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 600px) {\r\n    padding: 0 40px;\r\n  }\r\n`;\r\n\r\nconst IntroWapper = styled.div`\r\n  h1 {\r\n    font-weight: normal;\r\n    font-size: 36px;\r\n    line-height: 36px;\r\n  }\r\n  .tips {\r\n    font-size: 14px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    max-width: inherit;\r\n    margin-top: 40px;\r\n  }\r\n  p.ctx {\r\n    margin-bottom: 20px;\r\n    line-height: 30px;\r\n  }\r\n`;\r\n\r\nfunction getDate(dateStr: string) {\r\n  const dateArr = dateStr.substring(0, 10).split('-');\r\n  return dateArr[0] + '年' + dateArr[1] + '月' + dateArr[2] + '日';\r\n}\r\n\r\n// TODO: 显示距今时间\r\n// function getDiffDate(date) {\r\n//   const historyDate = new Date(date).getTime();\r\n//   const currentDate = new Date().getTime();\r\n//   const total = (currentDate - historyDate)/1000;\r\n//   console.log('total: ', total);\r\n//   var day = parseInt(total / (24*60*60));//计算整数天数\r\n//   console.log('day: ', day);\r\n// }\r\n\r\n// getDiffDate('2019-01-01');\r\n\r\n// TODO: 超过条数显示“更多”\r\nclass Introduce extends React.Component {\r\n  state = {\r\n    logsData: []\r\n  };\r\n  componentDidMount() {\r\n    // fetch({\r\n    //   type: 'GET',\r\n    //   url: logs\r\n    // }).then((resp) => {\r\n    //   if (resp.code === 0 && resp.status === 'ok') {\r\n    //     this.setState({ logsData: resp.data || [] });\r\n    //   }\r\n    // });\r\n  }\r\n  render() {\r\n    return (\r\n        <IntroduceLayout>\r\n        <IntroWapper>\r\n          {data.introduce.title.map((title, index) => (\r\n            <h1 key={index}>{title}</h1>\r\n          ))}\r\n          <p className=\"tips\">{data.introduce.tips}</p>\r\n          {data.introduce.banner}\r\n          {data.introduce.context.map((ctx, index) => (\r\n            <p key={index} className=\"ctx\">\r\n              {ctx}\r\n            </p>\r\n          ))}\r\n        </IntroWapper>\r\n        <div className=\"long-text-container\">\r\n          <h2 className=\"block-title\">{instructions.title}</h2>\r\n          <p>{instructions.abstract}</p>\r\n          {instructions.part.map((item, index) => (\r\n            <div key={index} className=\"section\">\r\n              <h3>{item.name}</h3>\r\n              {item.detail.map((i, idx) => (\r\n                <p key={idx}>{i}</p>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"version-container\">\r\n          <h2 className=\"block-title\">版本日志</h2>\r\n          {/* {this.state.logsData.map((block, idx) => (\r\n            <div className=\"log-box\" key={idx}>\r\n              <p>{getDate(block.date)}</p>\r\n              <ul className=\"log\">\r\n                {block.logs.map((log, index) => (\r\n                  <li key={index}>\r\n                    - {log.type}: {log.description}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))} */}\r\n        </div>\r\n      </IntroduceLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Introduce;"],"names":["data","introduce","title","tips","banner","src","context","instructions","abstract","part","name","detail","IntroduceLayout","styled","IntroWapper","Introduce","state","logsData","componentDidMount","render","map","index","key","className","ctx","item","i","idx","React"],"sourceRoot":""}